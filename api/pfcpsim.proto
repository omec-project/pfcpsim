// SPDX-License-Identifier: Apache-2.0
//Copyright 2022-present Open Networking Foundation

syntax = "proto3";
package api;

option go_package = ".;api";

message CreateSessionRequest {
  // count represents the number of session
  int32 count = 1;
  // baseID is used to create incremental IDs for PDRs, FARs, QERs
  int32 baseID = 2;
  string nodeBAddress = 3;
  string ueAddressPool = 4;
  string sdfFilter = 5;
  int32 qfi = 6; // Should be uint8
}

message ModifySessionRequest {
  // count represents the number of session
  int32 count = 1;
  // baseID is used to create incremental IDs for PDRs, FARs, QERs
  int32 baseID = 2;
  string nodeBAddress = 3;
  string ueAddressPool = 4;
  bool bufferFlag = 5;
  bool notifyCPFlag = 6;
}

message ConfigureRequest {
  // the data-plane interface between UPF and gNodeB
  string upfN3Address = 1;
  // the PFCP agent server address
  string remotePeerAddress = 3;
}

message DeleteSessionRequest {
  int32 count = 1;
  // baseID is used to decide where to start deleting sessions
  int32 baseID = 2;
}

message EmptyRequest {}

message Response {
  int32 status_code = 1;
  string message = 2;
}

service PFCPSim {
  rpc Configure (ConfigureRequest) returns (Response) {}
  // Associate connects PFCPClient to remote peer and starts an association
  rpc Associate (EmptyRequest) returns (Response) {}
  // Disassociate perform teardown of association and disconnects from remote peer.
  rpc Disassociate (EmptyRequest) returns (Response) {}

  rpc CreateSession (CreateSessionRequest) returns (Response) {}
  rpc ModifySession (ModifySessionRequest) returns (Response) {}
  rpc DeleteSession (DeleteSessionRequest) returns (Response) {}
}
